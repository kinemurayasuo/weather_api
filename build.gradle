import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm' version '1.7.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.23'
    id 'org.jetbrains.kotlin.kapt' version '1.7.22'
}

var domainProject = project(domainModule)
var internalProject = project(internalModule)

allprojects {
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'org.jetbrains.kotlin.plugin.jpa'
    apply plugin: 'org.jetbrains.kotlin.kapt'


    sourceCompatibility = '17'
    targetCompatibility = '17'

    configurations {
        compileOnly
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        // spring-boot
        implementation 'org.springframework:spring-web'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        implementation 'org.springframework.boot:spring-boot-starter-validation'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        // kotlin jackson
        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // mysql
        runtimeOnly 'com.mysql:mysql-connector-j'
    }

    tasks.withType(KotlinCompile) {
        kotlinOptions {
            freeCompilerArgs += '-Xjsr305=strict'
            jvmTarget = '17'
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    bootJar{
        enabled = false
    }
}

/*subprojects {
    dependencies {
        // spring-boot
        implementation 'org.springframework:spring-web'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        implementation 'org.springframework.boot:spring-boot-starter-validation'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        // kotlin jackson
        implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // mysql
        runtimeOnly 'com.mysql:mysql-connector-j'

        // project
        api domainProject
        api internalProject
    }

    tasks.withType(KotlinCompile) {
        kotlinOptions {
            freeCompilerArgs += '-Xjsr305=strict'
            jvmTarget = '17'
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    bootJar{
        enabled = false
    }
}*/

project(syncApplication) {
    dependencies {
        api domainProject
        api internalProject
    }

    bootJar {
        enabled = false
    }
}

project(inquireApplication) {
    dependencies {
        api domainProject
        api internalProject
    }

    bootJar {
        enabled = false
    }
}
